{
  "$schema": "https://json-schema.org/draft-07/schema",
  "title": "IBCData",
  "type": "object",
  "required": [
    "chain_1",
    "chain_2",
    "channels"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "pattern": "^(\\.\\./)+ibc_data\\.schema\\.json$"
    },
    "chain_1": {
      "type": "object",
      "$ref": "#/$defs/chain_info"
    },
    "chain_2": {
      "type": "object",
      "$ref": "#/$defs/chain_info"
    },
    "channels": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "chain_1",
          "chain_2",
          "ordering",
          "version"
        ],
        "properties": {
          "chain_1": {
            "type": "object",
            "$ref": "#/$defs/channel_info"
          },
          "chain_2": {
            "type": "object",
            "$ref": "#/$defs/channel_info"
          },
          "ordering": {
            "enum": [
              "ordered",
              "unordered"
            ],
            "description": "Determines if packets from a sending module must be 'ordered' or 'unordered'."
          },
          "version": {
            "type": "string",
            "description": "IBC Version"
          },
          "fee_version": {
            "type": "string",
            "description": "Fee Version"
          },
          "description": {
            "type": "string",
            "description": "Human readable description of the channel."
          },
          "tags": {
            "type": "object",
            "description": "Human readable key:value pairs that help describe and distinguish channels.",
            "properties": {
              "status": {
                "enum": [
                  "live",
                  "upcoming",
                  "killed"
                ]
              },
              "preferred": {
                "type": "boolean"
              },
              "dex": {
                "type": "string"
              },
              "properties": {
                "type": "string",
                "description": "String that helps describe non-dex use cases ex: interchain accounts(ICA)."
              }
            },
            "additionalProperties": true
          }
        },
        "additionalProperties": false
      }
    },
    "operators": {
      "type": "array",
      "description": "ibc connection operator information.",
      "items": {
        "type": "object",
        "required": [
          "chain_1",
          "chain_2",
          "memo",
          "name"
        ],
        "properties": {
          "chain_1": {
            "type": "object",
            "$ref": "#/$defs/chain_operator_info"
          },
          "chain_2": {
            "type": "object",
            "$ref": "#/$defs/chain_operator_info"
          },
          "memo": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Operator display name"
          },
          "discord_handle": {
            "type": "string"
          }
        }
      }
    }
  },
  "additionalProperties": false,
  "$defs": {
    "chain_operator_info": {
      "type": "object",
      "description": "Operator information on a specific chain.",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "chain_info": {
      "type": "object",
      "description": "Top level IBC data pertaining to the chain. `chain_1` and `chain_2` should be in alphabetical order.",
      "required": [
        "chain_name",
        "client_id",
        "connection_id"
      ],
      "properties": {
        "chain_name": {
          "type": "string"
        },
        "client_id": {
          "type": "string",
          "description": "The client ID on the corresponding chain representing the other chain's light client."
        },
        "connection_id": {
          "type": "string",
          "description": "The connection ID on the corresponding chain representing a connection to the other chain."
        }
      },
      "additionalProperties": false
    },
    "channel_info": {
      "type": "object",
      "required": [
        "channel_id",
        "port_id"
      ],
      "properties": {
        "channel_id": {
          "type": "string",
          "description": "The channel ID on the corresponding chain's connection representing a channel on the other chain."
        },
        "port_id": {
          "type": "string",
          "description": "The IBC port ID which a relevant module binds to on the corresponding chain."
        },
        "client_id": {
          "type": "string",
          "description": "Optional. The client ID on the corresponding chain representing the other chain's light client."
        },
        "connection_id": {
          "type": "string",
          "description": "Optional. The connection ID on the corresponding chain representing a connection to the other chain."
        }
      },
      "additionalProperties": false
    }
  }
}
